1. Get BitDepth
2. Get ByteOrder
3. Compare ByteOrder with 'big-endian'
4.write a string form with the name of the bite depth(e.g. double, dingle, uint16, uint8 etc.)
5.fp = use fopen() to open the file for reading in binary.
6.idss = Gets the number of Strips per frame.(assuming it's uniform)
7.ofds =  Get StripOffsets of the first strip in each frame. (from info file) {This is a matrix of nX1 of all offsets. In epnev's code, possible mistake of making a 2000X2000 matrix}
8.*When taking the offset, epnev assumes that each strip is uniform byte per strip.
9.displaying a message about the extent of the analysis (from frame number n to frame number m; m>n)
10.an unexplained pause.
11.fseek goes to the start of the first strip by using ofds(1).(probably to skip the meta data)
12.unexplained change from num2read to framenum. (they are equal)
13. create a cell array of dimensions 1Xnum2read.(imData.)
14. save the width and length of all frames in corresponding matrices he_w and he_h. (Epnev saves only the width and hight of the first frame, maybe he meant he_w = [info.Width]?)
15.sets some variable mul = 1.
16. an if statement with a for loop in it that writes the binary of each frame into a cell array of hight by width matrices.(imData)
the if statement's job is to differentiate between forms and also to differentiate between ByteOrders.
However, this if statement is very redundant and hard to read, and so a better implementation is suggested in the comments.
17.The cell array containing the frame matrices is converted into a 3 dimensional array, and reshaped to be hightXwidthXframnum.
18.If the file type was hdf5 or h5, and not tiff, the metadata is extracted using hdf5info(), and then the binary is read using the h5read function.

List of Needed metadata for opening a big tiff:
1.ByteOrder
2.BitDepth
3.number of strips in a frame.
4.strip offset of the first strip in each frame.
5.dimensions of each frame.
6.write the binary of each frame into a cell array.
7.convert to a hightXwidthXnumframe matrix.
